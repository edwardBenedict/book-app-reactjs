{"version":3,"sources":["components/NavigationBar.js","components/Welcome.js","components/Footer.js","components/results.js","components/MyToast.js","components/Book.js","components/BookList.js","components/UserList.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","bg","variant","to","className","src","width","height","alt","Nav","Welcome","props","Jumbotron","heading","quote","footer","Footer","fullYear","Date","getFullYear","fixed","Container","Col","lg","Component","axios","create","baseURL","MyToast","style","this","show","position","top","right","zIndex","boxShadow","Toast","type","Header","closeButton","Body","message","Book","state","author","initialState","coverPhotoURL","isbnNumber","language","price","title","genre","id","findBookById","bookId","results","get","then","response","console","log","data","setState","catch","error","resetBook","postDataHandler","e","preventDefault","Data","post","method","setTimeout","updateBook","event","book","put","bookList","history","push","match","params","display","Card","icon","faEdit","faPlusSquare","Form","onReset","onSubmit","Row","Group","as","controlId","Label","Control","required","autoComplete","name","value","onChange","target","placeholder","textAlign","Button","size","faSave","faUndo","onClick","bind","faList","BookList","books","deleteBook","delete","alert","filter","findAllBooks","fetchedResults","key","Table","bordered","hover","striped","length","align","colSpan","map","Image","roundedCircle","ButtonGroup","faTrash","UserList","users","currentPage","usersPerPage","changePage","parseInt","firstPage","prevPage","lastPage","Math","ceil","nextPage","findAllRandomUser","lastIndex","firstIndex","currentUsers","slice","totalPages","faUsers","user","index","picture","medium","first","toUpperCase","last","email","location","city","registered","date","dob","age","float","InputGroup","Prepend","disabled","faFastBackward","faStepBackward","FormControl","Append","faStepForward","faFastForward","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa97ffba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavigationBar() {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Link to={\"\"} className=\"navbar-brand\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/b/ba/Book_icon_1.png\"\r\n          width=\"25\"\r\n          height=\"25\"\r\n          alt=\"brand\"\r\n        />\r\n        Book Shop\r\n      </Link>\r\n      <Nav className=\"mr-auto\">\r\n        <Link to={\"add\"} className=\"nav-link\">\r\n          Add Book\r\n        </Link>\r\n        <Link to={\"list\"} className=\"nav-link\">\r\n          Book List\r\n        </Link>\r\n        <Link to={\"users\"} className=\"nav-link\">\r\n          User List\r\n        </Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nexport default function Welcome(props) {\r\n  return (\r\n    <Jumbotron className=\"bg-dark text-white\">\r\n      <h1>{props.heading}</h1>\r\n      <blockquote className=\"blockquote mb-0\">\r\n        <p>{props.quote}</p>\r\n        <footer className=\"blockquote-footer\">{props.footer}</footer>\r\n      </blockquote>\r\n    </Jumbotron>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Container, Col } from \"react-bootstrap\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let fullYear = new Date().getFullYear();\r\n    return (\r\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Col lg={12} className=\"text-center text-muted\">\r\n            <div>\r\n              {fullYear}-{fullYear + 1}, All Right Reserved by QWERTY\r\n            </div>\r\n          </Col>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://books-app-reactjs.firebaseio.com/\",\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\n\r\nexport default class MyToast extends Component {\r\n  render() {\r\n    const toastCss = {\r\n      position: \"fixed\",\r\n      top: \"10px\",\r\n      right: \"10px\",\r\n      zIndex: \"1\",\r\n      boxShadow:\r\n        \"0 4px 8px 0 rgba(0, 0, 0, 0.2) 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n    };\r\n    return (\r\n      <div style={this.props.show ? toastCss : null}>\r\n        <Toast\r\n          className={`border text-white ${\r\n            this.props.type === \"success\"\r\n              ? \"border-success bg-success\"\r\n              : \"border-danger bg-danger\"\r\n          }`}\r\n          show={this.props.show}\r\n        >\r\n          <Toast.Header\r\n            className={`text-white ${\r\n              this.props.type === \"success\" ? \"bg-success\" : \"bg-danger\"\r\n            }`}\r\n            closeButton={false}\r\n          >\r\n            <strong className=\"mr-auto\">Success</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>{this.props.message}</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport results from \"./results\";\r\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSave,\r\n  faPlusSquare,\r\n  faUndo,\r\n  faList,\r\n  faEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class Book extends Component {\r\n  state = {\r\n    author: this.initialState,\r\n    coverPhotoURL: this.initialState,\r\n    isbnNumber: this.initialState,\r\n    language: this.initialState,\r\n    price: this.initialState,\r\n    title: this.initialState,\r\n    genre: this.genre,\r\n    show: false,\r\n  };\r\n  initialState = {\r\n    id: \"\",\r\n    author: \"\",\r\n    coverPhotoURL: \"\",\r\n    isbnNumber: \"\",\r\n    language: \"\",\r\n    price: \"\",\r\n    title: \"\",\r\n    genre: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const bookId = this.props.match.params.id;\r\n    if (bookId) {\r\n      this.findBookById(bookId);\r\n    }\r\n  }\r\n\r\n  findBookById = (bookId) => {\r\n    results\r\n      .get(\"/books/\" + bookId + \".json\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data != null) {\r\n          this.setState({\r\n            id: bookId,\r\n            title: response.data.title,\r\n            author: response.data.author,\r\n            coverPhotoURL: response.data.coverPhotoURL,\r\n            isbnNumber: response.data.isbnNumber,\r\n            price: response.data.price,\r\n            language: response.data.language,\r\n            genre: response.data.genre,\r\n          });\r\n          console.log(\"id\", this.state.id);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error - \" + error);\r\n      });\r\n  };\r\n\r\n  resetBook = () => {\r\n    this.setState(() => this.initialState);\r\n  };\r\n  postDataHandler = (e) => {\r\n    e.preventDefault();\r\n    const Data = {\r\n      author: this.state.author,\r\n      coverPhotoURL: this.state.coverPhotoURL,\r\n      isbnNumber: this.state.isbnNumber,\r\n      language: this.state.language,\r\n      price: this.state.price,\r\n      title: this.state.title,\r\n      genre: this.state.genre,\r\n    };\r\n\r\n    results.post(\"/books.json\", Data).then((response) => {\r\n      console.log(response);\r\n      if (response.data != null) {\r\n        this.setState({ show: true, method: \"post\" });\r\n        setTimeout(() => this.setState({ show: false }), 3000);\r\n      } else {\r\n        this.setState({ show: false });\r\n      }\r\n    });\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  updateBook = (event) => {\r\n    event.preventDefault();\r\n    const book = {\r\n      id: this.state.id,\r\n      author: this.state.author,\r\n      coverPhotoURL: this.state.coverPhotoURL,\r\n      isbnNumber: this.state.isbnNumber,\r\n      language: this.state.language,\r\n      price: this.state.price,\r\n      title: this.state.title,\r\n      genre: this.state.genre,\r\n    };\r\n\r\n    results.put(\"/books/\" + this.state.id + \".json\", book).then((response) => {\r\n      console.log(response);\r\n      if (response.data != null) {\r\n        console.log(response);\r\n        this.setState({ show: true, method: \"put\" });\r\n        setTimeout(() => this.setState({ show: false }), 3000);\r\n        setTimeout(() => this.bookList(), 2000);\r\n      } else {\r\n        this.setState({ show: false });\r\n      }\r\n    });\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  bookList = () => {\r\n    return this.props.history.push(\"/list\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      author,\r\n      coverPhotoURL,\r\n      isbnNumber,\r\n      price,\r\n      language,\r\n      genre,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <div style={{ display: this.state.show ? \"block\" : \"none\" }}>\r\n          <MyToast\r\n            show={this.state.show}\r\n            message={\r\n              this.state.method === \"put\"\r\n                ? \"Book Updated Succesfully.\"\r\n                : \"Book Saved Succesfully.\"\r\n            }\r\n            type={\"success\"}\r\n          />\r\n        </div>\r\n        <Card className={\"border border-dark bg-dark text-white\"}>\r\n          <Card.Header>\r\n            <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} />\r\n            {this.state.id ? \"Update Book\" : \"Add New Book\"}\r\n          </Card.Header>\r\n          <Form\r\n            onReset={this.resetBook}\r\n            onSubmit={this.state.id ? this.updateBook : this.postDataHandler}\r\n            id=\"bookFormId\"\r\n          >\r\n            <Card.Body>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridTitle\">\r\n                  <Form.Label>Title</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={(e) => this.setState({ title: e.target.value })}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Book Title\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridAuthor\">\r\n                  <Form.Label>Author</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"author\"\r\n                    value={author}\r\n                    onChange={(e) => this.setState({ author: e.target.value })}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Book Author\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridCoverPhotoURL\">\r\n                  <Form.Label>Cover Photo URL</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"coverPhotoURL\"\r\n                    value={coverPhotoURL}\r\n                    onChange={(e) =>\r\n                      this.setState({ coverPhotoURL: e.target.value })\r\n                    }\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Book Cover Photo URL\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridISBNNumber\">\r\n                  <Form.Label>ISBN Number</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"isbnNumber\"\r\n                    value={isbnNumber}\r\n                    onChange={(e) =>\r\n                      this.setState({ isbnNumber: e.target.value })\r\n                    }\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Book ISBN Number\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridPrice\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={(e) => this.setState({ price: e.target.value })}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Book Price\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridLanguage\">\r\n                  <Form.Label>Language</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"language\"\r\n                    value={language}\r\n                    onChange={(e) =>\r\n                      this.setState({ language: e.target.value })\r\n                    }\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Book Language\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridGenre\">\r\n                  <Form.Label>Genre</Form.Label>\r\n                  <Form.Control\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"genre\"\r\n                    value={genre}\r\n                    onChange={(e) => this.setState({ genre: e.target.value })}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Book Genre\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n            </Card.Body>\r\n            <Card.Footer style={{ textAlign: \"right\" }}>\r\n              <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                <FontAwesomeIcon icon={faSave} />\r\n                {this.state.id ? \"Update\" : \"Save\"}\r\n              </Button>{\" \"}\r\n              <Button size=\"sm\" variant=\"info\" type=\"reset\">\r\n                <FontAwesomeIcon icon={faUndo} />\r\n                Reset\r\n              </Button>{\" \"}\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"info\"\r\n                type=\"button\"\r\n                onClick={this.bookList.bind()}\r\n              >\r\n                <FontAwesomeIcon icon={faList} />\r\n                Book List\r\n              </Button>\r\n            </Card.Footer>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Style.css\";\r\nimport results from \"./results\";\r\nimport { Card, Table, Image, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faList, faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class BookList extends Component {\r\n  state = {\r\n    books: [],\r\n  };\r\n  componentDidMount() {\r\n    this.findAllBooks();\r\n  }\r\n  findAllBooks() {\r\n    results.get(\"/books.json\").then((response) => {\r\n      console.log(response.data);\r\n      const fetchedResults = [];\r\n      for (let key in response.data) {\r\n        fetchedResults.push({\r\n          ...response.data[key],\r\n          id: key,\r\n        });\r\n      }\r\n      this.setState({ books: fetchedResults });\r\n    });\r\n  }\r\n  deleteBook = (bookId) => {\r\n    results.delete(\"/books/\" + bookId + \".json\").then((response) => {\r\n      if (response.data != null) {\r\n        /*IF ICINE GIRMIYOR */\r\n        alert(\"Book Deleted Succesfully\");\r\n        this.setState({\r\n          books: this.state.books.filter((book) => book.id !== bookId),\r\n        });\r\n      }\r\n      this.setState({ show: true });\r\n      setTimeout(() => this.setState({ show: false }), 3000);\r\n      this.setState({\r\n        books: this.state.books.filter((book) => book.id !== bookId),\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ display: this.state.show ? \"block\" : \"none\" }}>\r\n          <MyToast\r\n            show={this.state.show}\r\n            message={\"Book Deleted Succesfully.\"}\r\n            type={\"danger\"}\r\n          />\r\n        </div>\r\n\r\n        <Card className={\"border border-dark bg-dark text-white\"}>\r\n          <Card.Header>\r\n            <FontAwesomeIcon icon={faList} /> Book List\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Table bordered hover striped variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Author</th>\r\n                  <th>ISBN Number</th>\r\n                  <th>Price</th>\r\n                  <th>Language</th>\r\n                  <th>Genre</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.books.length === 0 ? (\r\n                  <tr align=\"center\">\r\n                    <td colSpan=\"6\">Books Available</td>\r\n                  </tr>\r\n                ) : (\r\n                  this.state.books.map((book) => (\r\n                    <tr key={book.id}>\r\n                      <td>\r\n                        <Image\r\n                          src={book.coverPhotoURL}\r\n                          roundedCircle\r\n                          width=\"25\"\r\n                          height=\"25\"\r\n                        />\r\n                        {book.title}\r\n                      </td>\r\n                      <td>{book.author}</td>\r\n                      <td>{book.isbnNumber}</td>\r\n                      <td>{book.price}</td>\r\n                      <td>{book.language}</td>\r\n                      <td>{book.genre}</td>\r\n                      <td>\r\n                        <ButtonGroup>\r\n                          <Link\r\n                            to={\"edit/\" + book.id}\r\n                            className=\"btn btn-sm btn-outline-primary\"\r\n                          >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                          </Link>\r\n                          {\"\"}\r\n\r\n                          <Button\r\n                            size=\"\"\r\n                            variant=\"outline-danger\"\r\n                            onClick={this.deleteBook.bind(this, book.id)}\r\n                          >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Style.css\";\r\nimport results from \"./results\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUsers,\r\n  faStepBackward,\r\n  faFastBackward,\r\n  faStepForward,\r\n  faFastForward,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default class UserList extends Component {\r\n  state = {\r\n    users: [],\r\n    currentPage: 1,\r\n    usersPerPage: 8,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.findAllRandomUser();\r\n  }\r\n  findAllRandomUser() {\r\n    results.get(\"/users.json\").then((response) => {\r\n      console.log(response.data);\r\n      const fetchedResults = [];\r\n      for (let key in response.data) {\r\n        fetchedResults.push({\r\n          ...response.data[key],\r\n          id: key,\r\n        });\r\n      }\r\n      this.setState({ users: fetchedResults });\r\n    });\r\n  }\r\n  changePage = (event) => {\r\n    this.setState({\r\n      [event.target.name]: parseInt(event.target.value),\r\n    });\r\n  };\r\n\r\n  firstPage = () => {\r\n    if (this.state.currentPage > 1) {\r\n      this.setState({\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  };\r\n  prevPage = () => {\r\n    if (this.state.currentPage > 1) {\r\n      this.setState({\r\n        currentPage: this.state.currentPage - 1,\r\n      });\r\n    }\r\n  };\r\n  lastPage = () => {\r\n    if (\r\n      this.state.currentPage <\r\n      Math.ceil(this.state.users.length / this.state.usersPerPage)\r\n    ) {\r\n      this.setState({\r\n        currentPage: Math.ceil(\r\n          this.state.users.length / this.state.usersPerPage\r\n        ),\r\n      });\r\n    }\r\n  };\r\n  nextPage = () => {\r\n    if (\r\n      this.state.currentPage <\r\n      Math.ceil(this.state.users.length / this.state.usersPerPage)\r\n    ) {\r\n      this.setState({\r\n        currentPage: this.state.currentPage + 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { users, currentPage, usersPerPage } = this.state;\r\n    const lastIndex = currentPage * usersPerPage;\r\n    const firstIndex = lastIndex - usersPerPage;\r\n    const currentUsers = users.slice(firstIndex, lastIndex);\r\n    const totalPages = users.length / usersPerPage;\r\n\r\n    return (\r\n      <div>\r\n        <Card className={\"border border-dark bg-dark text-white\"}>\r\n          <Card.Header>\r\n            <FontAwesomeIcon icon={faUsers} /> User List\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Table bordered hover striped variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <td>Name</td>\r\n                  <td>Email</td>\r\n                  <td>Address</td>\r\n                  <td>Created</td>\r\n                  <td>Balance</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.length === 0 ? (\r\n                  <tr align=\"center\">\r\n                    <td colSpan=\"6\">No Users Available</td>\r\n                  </tr>\r\n                ) : (\r\n                  currentUsers.map((user, index) => (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <Image\r\n                          src={user.picture.medium}\r\n                          roundedCircle\r\n                          width=\"25\"\r\n                          height=\"25\"\r\n                        />{\" \"}\r\n                        {currentPage * usersPerPage + index - usersPerPage + 1}{\" \"}\r\n                        -{\" \"}\r\n                        {user.name.first[0].toUpperCase() +\r\n                          user.name.first.slice(1)}{\" \"}\r\n                        {user.name.last.toUpperCase()}\r\n                      </td>\r\n                      <td>{user.email}</td>\r\n                      <td>\r\n                        {user.location.city[0].toUpperCase() +\r\n                          user.location.city.slice(1)}\r\n                      </td>\r\n                      <td>{user.registered.date.slice(0, 10)}</td>\r\n                      <td>${user.dob.age}Million</td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <div style={{ float: \"left\" }}>\r\n              Showing Page {currentPage} of {Math.ceil(totalPages)}\r\n            </div>\r\n            <div style={{ float: \"right\" }}>\r\n              <InputGroup size=\"sm\">\r\n                <InputGroup.Prepend>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline-info\"\r\n                    disabled={currentPage === 1 ? true : false}\r\n                    onClick={this.firstPage}\r\n                  >\r\n                    <FontAwesomeIcon icon={faFastBackward} /> First\r\n                  </Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline-info\"\r\n                    disabled={currentPage === 1 ? true : false}\r\n                    onClick={this.prevPage}\r\n                  >\r\n                    <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                  </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  className={\"page-num bg-dark\"}\r\n                  name=\"currentPage\"\r\n                  value={currentPage}\r\n                  onChange={this.changePage}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline-info\"\r\n                    disabled={\r\n                      currentPage === Math.ceil(totalPages) ? true : false\r\n                    }\r\n                    onClick={this.nextPage}\r\n                  >\r\n                    <FontAwesomeIcon icon={faStepForward} /> Next\r\n                  </Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline-info\"\r\n                    disabled={\r\n                      currentPage === Math.ceil(totalPages) ? true : false\r\n                    }\r\n                    onClick={this.lastPage}\r\n                  >\r\n                    <FontAwesomeIcon icon={faFastForward} /> Last\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </div>\r\n          </Card.Footer>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport NavigationBar from \"./components/NavigationBar\";\nimport Welcome from \"./components/Welcome\";\nimport Footer from \"./components/Footer\";\nimport Book from \"./components/Book\";\nimport BookList from \"./components/BookList\";\nimport UserList from \"./components/UserList\";\n\nexport default function App() {\n  const heading = \"Welcome to Book Shop\";\n  const quote =\n    \"Good friends, good books, and a sleepy conscience: this is the ideal life.\";\n  const footer = \"Mark Twain\";\n  return (\n    <Router>\n      <NavigationBar />\n      <Container>\n        <Row>\n          <Col lg={12} className={\"margin-top\"}>\n            <Switch>\n              <Route\n                path=\"/\"\n                exact\n                component={() => (\n                  <Welcome heading={heading} quote={quote} footer={footer} />\n                )}\n              />\n              <Route path=\"/add\" exact component={Book} />\n              <Route path=\"/edit/:id\" exact component={Book} />\n              <Route path=\"/list\" exact component={BookList} />\n              <Route path=\"/users\" exact component={UserList} />\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}